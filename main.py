import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('6643283580:AAEq4wtoANh1nv2RDFzxhezn6NvEnUCGp6o')

# –ó–∞–¥–∞–π—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
admin_chat_id = '455499371'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞

user_data = {}
contact_data = {}

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
def create_back_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(button_back)
    return markup


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ process_agreement
# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å" –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
start_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
start_button = types.KeyboardButton('–ù–∞—á–∞—Ç—å')
start_markup.add(start_button)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start –∏ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: message.text == '/start' or message.text == '–ù–∞—á–∞—Ç—å')
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    button2 = types.KeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏')
    button3 = types.KeyboardButton('–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
    markup.add(button1)
    markup.add(button2, button3)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)

def create_back_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(button_back)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def go_back(message):
    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
    bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥.')

@bot.message_handler(func=lambda message: message.text == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
def process_info(message):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª –º–∞–≥–∞–∑–∏–Ω–∞
    rules_of_store = [
    "1. –í—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–æ–¥–∞—é—Ç—Å—è –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ü–µ–Ω–∞–º.",
    "2. –û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ –ø–æ–ª–Ω–æ–π –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ.",
    "3. –î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –¥–æ 1 –º–µ—Å—è—Ü–∞.",
    "4. –í–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –≤—ã —Å–∞–º–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–±–∏—Ä–∞–µ—Ç–µ –º–æ–¥–µ–ª—å, —Ü–≤–µ—Ç –∏ —Ä–∞–∑–º–µ—Ä .",
    "5. –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
    "6. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä —Å POIZON , —Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤—Å—è —Ç–∞–∂–µ —Å–∞–º–∞—è —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ü–µ–Ω–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä –∏ –¥–æ—Å—Ç–∞–≤–∫—É –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ"
    ]

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é "\n" –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
    rules_text = "\n".join(rules_of_store)

    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ —ç–∫—Ä–∞–Ω
    bot.send_message(message.chat.id, f"–ü—Ä–∞–≤–∏–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞:\n{rules_text}")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–°–æ–≥–ª–∞—Å–µ–Ω" –∏ "–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttonAgree = types.KeyboardButton('–°–æ–≥–ª–∞—Å–µ–Ω')
    buttonDesAgree = types.KeyboardButton('–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω')
    markup.add(buttonAgree, buttonDesAgree)

    # –í—ã–≤–æ–¥–∏–º –≤–æ–ø—Ä–æ—Å –æ —Å–æ–≥–ª–∞—Å–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–°–æ–≥–ª–∞—Å–µ–Ω" –∏ "–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω"
    bot.send_message(message.chat.id, '–°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞?', reply_markup=markup)
    bot.register_next_step_handler(message, process_agreement)

def process_agreement(message):
    agreement = message.text
    if agreement.lower() in ['–¥–∞', '—Å–æ–≥–ª–∞—Å–µ–Ω', '—Å–æ–≥–ª–∞—Å–µ–Ω', 'yes']:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫–∞–∑:')
        bot.register_next_step_handler(message, process_article_number)
    elif agreement.lower() in ['–Ω–µ—Ç', '–Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω']:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞.')
        bot.send_message(message.chat.id, '–í—ã –±—É–¥–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
        start(message)

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å start() —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ "–°–æ–≥–ª–∞—Å–µ–Ω" –∏–ª–∏ "–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω" –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.')


def process_article_number(message):
    article_number = message.text
    user_data[message.chat.id] = {'article_number': article_number}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –Ω–æ–≥–∏ –≤ –º–∏–ª–ª–∏–º–µ—Ç—Ä–∞—Ö –∏ —Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞:')
    bot.register_next_step_handler(message, process_foot_size)

# –î–∞–ª–µ–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞...
def process_foot_size(message):
    foot_size = message.text
    user_data[message.chat.id]['foot_size'] = foot_size
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:')
    bot.register_next_step_handler(message, process_full_name)

def process_full_name(message):
    full_name = message.text
    user_data[message.chat.id]['full_name'] = full_name
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —É–¥–æ–±–Ω–æ–≥–æ –≤–∞–º –°–¥—ç–∫:')
    bot.register_next_step_handler(message, process_address)

def process_address(message):
    address = message.text
    user_data[message.chat.id]['address'] = address
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –¥–ª—è —Å–≤—è–∑–∏:')
    bot.register_next_step_handler(message, process_telegram_profile)

def process_telegram_profile(message):
    telegram_profile = message.text
    user_data[message.chat.id]['telegram_profile'] = telegram_profile
    send_order_form(message)

def send_order_form(message):
    if 'article_number' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ –∑–∞–∫–∞–∑–∞.')
        return

    if 'foot_size' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ –Ω–æ–≥–∏.')
        return


    if 'full_name' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û.')
        return

    if 'address' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥—Ä–µ—Å–µ.')
        return

    if 'telegram_profile' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.')
        return

    order_details = f"–°—Å—ã–ª–∫–∞: {user_data[message.chat.id]['article_number']}\n" \
                    f"–†–∞–∑–º–µ—Ä : {user_data[message.chat.id]['foot_size']}\n" \
                    f"–§–ò–û: {user_data[message.chat.id]['full_name']}\n" \
                    f"–ê–¥—Ä–µ—Å: {user_data[message.chat.id]['address']}\n" \
                    f"–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –ø—Ä–æ—Ñ–∏–ª—å: {user_data[message.chat.id]['telegram_profile']}\n"

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(message.chat.id, order_details)

    bot.send_message(admin_chat_id, '–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(admin_chat_id, order_details)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    #button_order_status = types.KeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏')
    markup.add(button_main_menu)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏')
def selectValue(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttonValueDollar = types.KeyboardButton('üíµ')
    buttonValueEuro = types.KeyboardButton('üí∂')
    buttonValueYuan = types.KeyboardButton('üí¥')
    markup.add(buttonValueDollar, buttonValueEuro, buttonValueYuan)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞:', reply_markup=markup)
    bot.register_next_step_handler(message, process_selected_value)

def process_selected_value(message):
    selected_currency = message.text.lower()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä

    if selected_currency in ['üíµ', 'üí∂', 'üí¥']:
        user_data[message.chat.id] = {'selected_currency': selected_currency}
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ {selected_currency}:')
        bot.register_next_step_handler(message, process_price_status)
    else:
        bot.send_message(message.chat.id, '–í—ã–±—Ä–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞.')
        selectValue(message)

def process_price_status(message):
    try:
        product_price = float(message.text)
        selected_currency = user_data[message.chat.id]['selected_currency']

        if selected_currency == 'üíµ':
            currencyDollar(message, product_price)
        elif selected_currency == 'üí∂':
            currencyEuro(message, product_price)
        elif selected_currency == 'üí¥':
            currencyYuan(message, product_price)

    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∏—Å–ª–æ–º.')
    bot.send_message(message.chat.id, '–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞.')
   # bot.send_message(message.chat.id,    '–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–∞—Å—Å—ã –∫–æ—Ä–æ–±–∫–∏ ,–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ–±–∫–∞ –≤–µ—Å–∏—Ç 1.5–∫–≥ => –¥–æ—Å—Ç–∞–≤–∫–∞ –∏–¥–µ—Ç –∫–∞–∫ –∑–∞ 2–∫–≥ –∏ –±—É–¥–µ—Ç –≤ —Ä–∞–π–æ–Ω–µ 3–∫. –ù–æ —Ç–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Ç–æ—á–Ω–∞—è–π—Ç–µ —É –ø—Ä–æ–¥–∞–≤—Ü–∞')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button_recalculate = types.KeyboardButton('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
    button_order = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    markup.add(button_recalculate, button_order)
    markup.add(button_main_menu)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
def recalculate_price(message):
    selectValue(message)

@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def return_to_main_menu(message):
    start(message)




@bot.message_handler(func=lambda message: message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
def process_call_reason(message):
    bot.send_message(message.chat.id, '–ü–æ –∫–∞–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º?')
    bot.register_next_step_handler(message, process_call_reason_details)

def process_call_reason_details(message):
    call_reason = message.text
    contact_data[message.chat.id] = {'call_reason': call_reason}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:')
    bot.register_next_step_handler(message, process_full_name_and_profile)

def process_full_name_and_profile(message):
    full_name = message.text
    contact_data[message.chat.id]['full_name'] = full_name
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –¥–ª—è —Å–≤—è–∑–∏:')
    bot.register_next_step_handler(message, process_telegram_profile_contact)

def process_telegram_profile_contact(message):
    telegram_profile = message.text
    contact_data[message.chat.id]['telegram_profile'] = telegram_profile
    send_contact_request(message)

def send_contact_request(message):
    if 'call_reason' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏—á–∏–Ω–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.')
        return

    if 'full_name' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û.')
        return

    if 'telegram_profile' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.')
        return

    contact_details = f"–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: {contact_data[message.chat.id]['call_reason']}\n" \
                      f"–§–ò–û: {contact_data[message.chat.id]['full_name']}\n" \
                      f"–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –ø—Ä–æ—Ñ–∏–ª—å: {contact_data[message.chat.id]['telegram_profile']}\n"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(button_main_menu)

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –° –≤–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Ç—Å—è.', reply_markup=markup)
    bot.send_message(admin_chat_id, '–° –≤–∞–º–∏ —Ö–æ—Ç—è—Ç —Å–≤—è–∑–∞—Ç—å—Å—è:')
    bot.send_message(admin_chat_id, contact_details)



@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def return_to_main_menu(message):
    start(message)


def currencyDollar(message, product_price):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞
    Dollar_rub_url = 'https://www.google.com/search?q=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'
    }

    try:
        response = requests.get(Dollar_rub_url, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        convert = soup.find("span", {"class": "DFlfde SwHCTb", "data-precision": "2"})
        kurs = float(convert.text.replace(",", "."))

        rub_price = (product_price * (kurs + 7)) * 1.32  # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—É—Ä—Å–∞

        # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        info = f'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {rub_price:.2f} ‚ÇΩ;\n\n'
        info += 'üöö –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 25 - 30 –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞;\n\n'
        #info += '\n'
        info += '‚ùóÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∞ –±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏!\n\n'
        info += '–î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @arsushkin!'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        bot.send_message(message.chat.id, info)

    except Exception as e:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞.')


def currencyEuro(message, product_price):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ
    Euro_rub_url = 'https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B5%D0%B2%D1%80%D0%BE-%D1%80%D1%83%D0%B1%D0%BB%D1%8C'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'
    }

    try:
        response = requests.get(Euro_rub_url, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        convert = soup.find("span", {"class": "DFlfde SwHCTb", "data-precision": "2"})
        kurs = float(convert.text.replace(",", "."))
        #bot.send_message(message.chat.id, f'–ö—É—Ä—Å –µ–≤—Ä–æ: {kurs:.2f} ‚ÇΩ')

        rub_price = (product_price * (kurs + 7)) * 1.32  # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—É—Ä—Å–∞
        # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        info = f'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {rub_price:.2f} ‚ÇΩ;\n\n'
        info += 'üöö –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 25 - 30 –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞;\n\n'
        # info += '\n'
        info += '‚ùóÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∞ –±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏!\n\n'
        info += '–î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @arsushkin!'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        bot.send_message(message.chat.id, info)


    except Exception as e:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ.')



def currencyYuan(message, product_price):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ
    Yuan_rub_url = 'https://www.google.com/search?q=%D1%8E%D0%B0%D0%BD%D1%8C+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&hl=en&sxsrf=AM9HkKl519yGZrTTfMpWYuOuPTQh7q67JQ%3A1696695894496&iflsig=AO6bgOgAAAAAZSGUZoQzmORXStor9tQnIMOpjGpA8zrT'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'
    }

    try:
        response = requests.get(Yuan_rub_url, headers=headers)
        soup = BeautifulSoup(response.content, 'html.parser')
        convert = soup.find("span", {"class": "DFlfde SwHCTb", "data-precision": "2"})
        kurs = float(convert.text.replace(",", "."))
        #bot.send_message(message.chat.id, f'–ö—É—Ä—Å —é–∞–Ω—è: {kurs:.2f} ‚ÇΩ')
        rub_price = (product_price * (kurs + 3)) +700
        #rub_price = (product_price * (kurs + 1)) * 1.2  # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—É—Ä—Å–∞
        # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        info = f'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {rub_price:.2f} ‚ÇΩ;\n\n'
        info += 'üöö –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 25 - 30 –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞;\n\n'
        # info += '\n'
        info += '‚ùóÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∞ –±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏!\n\n'
        info += '–î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @arsushkin!'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        bot.send_message(message.chat.id, info)


    except Exception as e:
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ.')

if __name__ == "__main__":
    bot.polling(none_stop=True, timeout=60)